[{"id":"7b6a94f2.1365fc","type":"http in","z":"32de6612.f2f4fa","name":"/start","url":"/start","method":"post","swaggerDoc":"","x":58.75000762939453,"y":20,"wires":[["a731f671.cde968","fe676145.4fded"]]},{"id":"c6e4334d.11276","type":"switch","z":"32de6612.f2f4fa","name":"Alexa Request Type","property":"payload.request.type","propertyType":"msg","rules":[{"t":"eq","v":"LaunchRequest","vt":"str"},{"t":"eq","v":"IntentRequest","vt":"str"},{"t":"eq","v":"SessionEndedRequest","vt":"str"},{"t":"else"}],"checkall":"true","outputs":4,"x":158.10469818115234,"y":671.1880493164062,"wires":[["ae370963.a63028"],["8e9d4286.488dc"],["b6801b97.4f8678","c3998321.4207f"],["b6801b97.4f8678"]]},{"id":"8e9d4286.488dc","type":"switch","z":"32de6612.f2f4fa","name":"Intents","property":"payload.request.intent.name","propertyType":"msg","rules":[{"t":"eq","v":"StartIntent","vt":"str"},{"t":"eq","v":"NextQuestionIntent","vt":"str"},{"t":"eq","v":"RepeatQuestionIntent","vt":"str"},{"t":"eq","v":"InterviewContinueIntent","vt":"str"},{"t":"eq","v":"sources","vt":"str"},{"t":"eq","v":"AMAZON.HelpIntent","vt":"str"},{"t":"eq","v":"AMAZON.CancelIntent","vt":"str"},{"t":"eq","v":"AMAZON.StopIntent","vt":"str"},{"t":"eq","v":"newuser","vt":"str"},{"t":"eq","v":"finished","vt":"str"},{"t":"eq","v":"thinking","vt":"str"},{"t":"eq","v":"endsession","vt":"str"},{"t":"eq","v":"explain","vt":"str"},{"t":"eq","v":"feedback","vt":"str"},{"t":"eq","v":"score","vt":"str"},{"t":"else"}],"checkall":"true","outputs":16,"x":339.59586334228516,"y":405.96734619140625,"wires":[["ae370963.a63028"],["8f6758b5.897048"],["c4f3439b.9b3dc"],["d361afa6.a322"],["9c1df111.847"],["f4009205.66b39"],["89496b84.f77668"],["89496b84.f77668"],["89496b84.f77668"],["89496b84.f77668"],["927fe4a1.7b35a8"],["b6801b97.4f8678"],["b076b95a.58dd58"],["4c4249f5.f7e758"],["d6cd8282.66884"],["b6801b97.4f8678"]]},{"id":"a3a18a40.b93b78","type":"template","z":"32de6612.f2f4fa","name":"With card text","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{\n    \"version\": \"1.0\",\n    \"response\": {\n        \"outputSpeech\": {\n            \"type\": \"SSML\",\n            \"text\": \"string\",\n            \"ssml\": \"<speak>{{{payload}}}</speak>\"\n        },\n        \"card\": {\n          \"type\": \"Standard\",\n          \"title\": \"I Ching\",\n          \"text\": \"{{{card_text}}}\"\n        },\n        \"reprompt\": {\n          \"outputSpeech\": {\n            \"type\": \"SSML\",\n            \"text\": \"string\",\n            \"ssml\": \"<speak>{{{reprompt_text}}}</speak>\"\n          }\n         },\n        \"shouldEndSession\": {{shouldendsession}}\n    }\n}","x":1125.7221908569336,"y":615.6111078262329,"wires":[["d4309587.b3d0b8"]]},{"id":"d4309587.b3d0b8","type":"json","z":"32de6612.f2f4fa","name":"","x":1289.4206809997559,"y":670.2182865142822,"wires":[["f904929a.47bb8"]]},{"id":"f904929a.47bb8","type":"http response","z":"32de6612.f2f4fa","name":"","x":1348.2381858825684,"y":754.4126853942871,"wires":[]},{"id":"9c1df111.847","type":"function","z":"32de6612.f2f4fa","name":"Sources","func":"msg.payload = \"The iChing readings provided here are based on the open source algorithms of Dan Enright. \";\nmsg.payload = msg.payload + \"For more information, search online for the Java script Eye Ching Hex a gram Generator.  This is version 1 point 2. \";\nmsg.payload = msg.payload + \"<p>Shall we continue?</p>\";\n\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\nmsg.reprompt_text = \"<p>Shall we continue?</p>\";\nmsg.card_text = \"Sources\"; // \\\\nSee http:\\/\\/www.danenright.com\\/IChing\\/indexF.html\"\nmsg.card_text = msg.card_text + \"\\\\nThe iChing readings provided here are based on the open source algorithms of Dan Enright.\";\nmsg.card_text = msg.card_text + \"\\\\nFor more information, search online for the 'Javascript I Ching Hexagram Generator'.  This is version 1.2.\";\nreturn msg;","outputs":1,"noerr":0,"x":613.3849563598633,"y":550.5754480361938,"wires":[["2a82d6ba.b07e2a"]]},{"id":"1940a715.a3de39","type":"function","z":"32de6612.f2f4fa","name":"The Reading","func":"var hexagram1_num = context.global.hexagrams[msg.hexagram_1].hexagram_num;  \nvar hexagram1_name = context.global.hexagrams[msg.hexagram_1].hexagram_name;\nvar hexagram1_text_summary = context.global.hexagrams[msg.hexagram_1].hexagram_text_summary;\n\nvar hexagram2_num = context.global.hexagrams[msg.hexagram_2].hexagram_num;  \nvar hexagram2_name = context.global.hexagrams[msg.hexagram_2].hexagram_name;\nvar hexagram2_text_summary = context.global.hexagrams[msg.hexagram_2].hexagram_text_summary;\n\n\n// Varying the response to keep dialog interesting...\n        var qnum = context.global.index + 1; // add 1 since it's a zero-based index\n        var low = 1;\n        var high = 9; // use this to generate 1-9 values choosing what to say\n        var choice = Math.floor(Math.random() * (high - low + 1) + low);\n            var prepend_text = \"\";\n        switch (choice) {\n            case 1:\n                prepend_text = \"Okay. \";\n                break; \n            case 2:\n                prepend_text = \"Hmmmm.  This is interesting. \";\n                break;\n            case 3:\n                prepend_text = \"Ahh. \";\n                break;\n            default: \n                prepend_text = \"\"; // add other cases if needed\n            }\n        prepend_text = \"<p>\" + prepend_text + \"</p> hexagram number \" + hexagram1_num + \".   <p>\" + hexagram1_name + \".</p><break time='1s'/>\";\n        context.global.currenthexagram = prepend_text + hexagram1_text_summary;\n        msg.payload = context.global.currenthexagram;\n        msg.payload = \"<audio src=\\'https://s3-us-west-1.amazonaws.com/voicecoiching/windmelody_excerpt.mp3\\' />\" + msg.payload;\n        // https://s3-us-west-1.amazonaws.com/voicecoiching/windmelody_excerpt.mp3\n\n        msg.reprompt_text = \"If you would like another reading, say CONTINUE.  Otherwise, say GOODBYE to end our session.\";\n        context.global.index = context.global.index + 1;\n        context.global.shouldendsession = false;\n\nmsg.image_URL = \"\";\n\nif (hexagram2_num != hexagram1_num) { // add 2nd hexagram info if not identical to first\n    msg.payload = msg.payload + \"<break time='2.0s'/><p>Your reading includes a second hexagram.</p>\";\n    msg.payload = msg.payload + \"<audio src=\\'https://s3-us-west-1.amazonaws.com/voicecoiching/chinese_flute.mp3\\' />\";\n    msg.payload = msg.payload + \"<p>Number \" + hexagram2_num + \". </p><p>\" + hexagram2_name + \"</p><p>\" + hexagram2_text_summary + \".</p>\"; // REMOVED  + '<break time=\"1s\"/>'\n\n    msg.card_text = \"1) Hexagram #\" + hexagram1_num + \": \" + hexagram1_name + \"\\\\n\" + hexagram1_text_summary;\n    msg.card_text = msg.card_text  + \"\\\\n2) Hexagram #\" + hexagram2_num + \": \" + hexagram2_name + \"\\\\n\" + hexagram2_text_summary;\n    } else {\n        msg.payload = msg.payload + \"<break time='0.5s'/>Since there were no changing lines in your reading, that is the only hexagram.\";\n        msg.card_text = \"Hexagram #\" + hexagram1_num + \": \" + hexagram1_name + \"\\\\n\" + hexagram1_text_summary;\n        msg.card_text = msg.card_text  + \"\\\\n(Only one hexagram was required for this reading.)\";\n    }         \nmsg.payload = msg.payload + \"<break time='2.0s'/>\" + msg.reprompt_text;\nmsg.shouldendsession = context.global.shouldendsession;\n//        msg.image_URL = \"https://s3-us-west-1.amazonaws.com/voicecoiching/Iching-hexagram-64.svg.png\"; // test image only!\nreturn msg;","outputs":1,"noerr":0,"x":716.420783996582,"y":415.34521484375,"wires":[["2a82d6ba.b07e2a","5142485c.33a9f8"]]},{"id":"c4f3439b.9b3dc","type":"function","z":"32de6612.f2f4fa","name":"Repeat the Question","func":"\n    if(context.global.currenthexagram === \"\" || typeof context.global.currenthexagram == 'undefined'){\n        msg.payload = \"Ready to start?\";\n    } else {msg.payload = \"Sure, I'll repeat: \" + context.global.currenthexagram;}\n\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\nmsg.reprompt_text = \"Ready to go on?\";\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":655.6944046020508,"y":468.4762649536133,"wires":[["2a82d6ba.b07e2a"]]},{"id":"3d074ce4.e4fbe4","type":"cloudant in","z":"32de6612.f2f4fa","name":"Cloudant dB","cloudant":"17e86ab0.bee305","database":"hexagrams","service":"_ext_","search":"_id_","design":"","index":"","x":573.9443435668945,"y":61.361114501953125,"wires":[["be9d1e88.3b8bb","db6486e0.b35c58"]]},{"id":"be9d1e88.3b8bb","type":"function","z":"32de6612.f2f4fa","name":"Load Hexagrams","func":"node.status({fill:\"green\",shape:\"dot\",text:\"reading database\"});\n\n// determine max # of hexagrams\nvar key = 0;\nfor(key in msg.payload.data) {\n  if(msg.payload.data.hasOwnProperty(key)) {\n    context.global.hexagrams_max++;\n  }\n}\n\n// Question Loader:\nfor (var i=0; i<context.global.hexagrams_max; i++) {\n        context.global.hexagrams.push({\n            hexagram_num:msg.payload.data[i].hexagram_num,\n            hexagram_name:msg.payload.data[i].hexagram_name,\n            hexagram_alternate:msg.payload.data[i].hexagram_alternate,\n            hexagram_text_summary:msg.payload.data[i].hexagram_text_summary\n        }\n    )}\nmsg.payload = context.global.hexagrams_max;\nnode.status({});   // to clear the status\nreturn msg;","outputs":1,"noerr":0,"x":764.4166946411133,"y":61,"wires":[["d95f7757.879ff8","b7dfeea2.bc7f5"]]},{"id":"c2c7347a.c93b28","type":"template","z":"32de6612.f2f4fa","name":"dB id","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"84971705d5558ccd9d33ce4b1de55435","x":411.77783966064453,"y":63,"wires":[["3d074ce4.e4fbe4"]]},{"id":"d361afa6.a322","type":"function","z":"32de6612.f2f4fa","name":"\"Anything else?\"","func":"var low = 1;\n    var high = 6;\n    var choice = Math.floor(Math.random() * (high - low + 1) + low);\n    switch (choice) {\n        case 1:\n            text = \"Should we continue?\";\n            break; \n        case 2:\n            text = \"Anything more?\";\n            break; \n        default: \n            text = \"Anything else?\"; // add other cases if needed\n        }\n    msg.payload = text;\n    msg.reprompt_text = msg.payload;\n\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":643.3849563598633,"y":511.5753870010376,"wires":[["2a82d6ba.b07e2a"]]},{"id":"b6801b97.4f8678","type":"function","z":"32de6612.f2f4fa","name":"End Session","func":"    var low = 1;\n    var high = 8;\n    var choice = Math.floor(Math.random() * (high - low + 1) + low);\n    switch (choice) {\n        case 1:\n            text = \"Take care and be well. \";\n            break; \n        case 2:\n            text = \"Have a nice day. \";\n            break;\n        case 3:\n            text = \"Goodbye. \";\n            break;\n        case 4:\n            text = \"So long, my friend. \";\n            break;\n        case 5:\n            text = \"Until next time, farewell. \";\n            break;\n        default: \n            text = \"I hope that was helpful.  Come by again. \"; // add other cases if needed\n        }\n    msg.payload = text;\n\n\n    context.global.shouldendsession = true;\n    msg.shouldendsession = true;\n    msg.reprompt_text = msg.payload;\n    \n// Clear all global variables for this session\n    for(var index in context.global) { \n    \tdelete context.global[index];\n    }\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":621.5278396606445,"y":709.0674543380737,"wires":[["2a82d6ba.b07e2a"]]},{"id":"ae370963.a63028","type":"function","z":"32de6612.f2f4fa","name":"Welcome","func":"// Prepare greeting\n var low = 1;\n        var high = 9; // use this to generate 1-6 values\n        var choice = Math.floor(Math.random() * (high - low + 1) + low);\n        var prepend_text = \"\";\n    switch (choice) {\n        case 1:\n            prepend_text = \"Greetings. \";\n            break; \n        case 2:\n            prepend_text = \"What a lovely day. \";\n            break;\n        case 3:\n            prepend_text = \"Welcome. \";\n            break;\n        case 4:\n            prepend_text = \"Hello. \";\n            break;\n        default: \n            prepend_text = \"Welcome to My Ching. \"; // add other cases if needed\n        }\n\n    msg.payload = prepend_text + \"<break time='1.1s'/> Please think of a question or a problem that faces you.  Then say ready when you are ready for your reading.\";\n    msg.reprompt_text = \"Ready?\";\n    context.global.currenthexagram = \"Please think of a question or a problem that faces you.  Then say ready when you are ready for your reading.\";\nmsg.shouldendsession = false;\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":723.3889846801758,"y":231.0833282470703,"wires":[["2a82d6ba.b07e2a"]]},{"id":"f4009205.66b39","type":"function","z":"32de6612.f2f4fa","name":"\"Help\"","func":"var text = \"\";\nif(context.global.help_first_time === true){\n    text = \"Happy to help. \";\n    context.global.help_first_time = false;\n}\ntext = text + \"To hear a new hexagram reading, say NEXT. \"\ntext = text + \"To repeat the hexagram, say REPEAT. \"\ntext = text + \"For an explanation of I Ching, say EXPLAIN. \"\ntext = text + \"To hear the sources for this I Ching service, say SOURCES. \"\ntext = text + \"To give us feedback on this Alexa skill, say FEEDBACK. \"\ntext = text + \"Ready to continue? \"\nmsg.payload = text;\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\nmsg.reprompt_text = \"Once again, \" + msg.payload;\nmsg.card_text = \"Try saying any of the following commands:\\\\n\";\nmsg.card_text = msg.card_text + \"NEXT: read next hexagram\\\\n\";\nmsg.card_text = msg.card_text + \"REPEAT: repeat last hexagram\\\\n\";\nmsg.card_text = msg.card_text + \"EXPLAIN: what is I Ching?\\\\n\";\nmsg.card_text = msg.card_text + \"SOURCES: source material for this skill\\\\n\";\nmsg.card_text = msg.card_text + \"FEEDBACK: give us feedback\\\\n\";\nreturn msg;","outputs":1,"noerr":0,"x":603.5000076293945,"y":589.2221775054932,"wires":[["2a82d6ba.b07e2a"]]},{"id":"89496b84.f77668","type":"function","z":"32de6612.f2f4fa","name":"\"Cancel\" or \"Stop\"","func":"var text = \"Okay. Say CONTINUE if you would like a new hexagram reading.  Or say GOODBYE to end the session.\";\nmsg.payload = text;\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\nmsg.reprompt_text = \"Continue?\";\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":642.953010559082,"y":637.4933567047119,"wires":[["2a82d6ba.b07e2a"]]},{"id":"1f89a078.d1c7d","type":"function","z":"32de6612.f2f4fa","name":"Setup","func":"msg.load_database = \"no\";\n\n// if the hexagrams database is undefined, set up all global variables\nif (typeof context.global.hexagrams == 'undefined' || msg.payload.session.new){\n    msg.load_database = \"load\";\n     // Clear all global variables for this session\n        for(var index in context.global) { \n    \tdelete context.global[index];\n        }\n    // Set all GLOBAL variables for this app (across sessions!)\n        context.global.hexagrams_max = 0; // How many questions in database?\n        context.global.hexagrams =[];\n    // Set SESSION variables (for this user-session only)\n        context.global.index = 0; // which question are we on?\n        context.global.shouldendsession = false;\n}\nif (msg.payload.session.new){\n        msg.load_database = \"load_and_welcome\";\n}\n// Get the userid\n    msg.user_id = msg.payload.session.user.userId;\n    \n if (msg.payload.session.application.applicationId != \"amzn1.echo-sdk-ams.app.7ec98afa-a006-491f-a64f-067b2c90323e\"){\n    msg.load_database = \"bad_applicationId\";\n    }\n\nreturn msg;","outputs":1,"noerr":0,"x":88.37500762939453,"y":315.25,"wires":[["17b5ff4c.78dd71","4610167.5314fe8","50652caa.d95944"]]},{"id":"17b5ff4c.78dd71","type":"switch","z":"32de6612.f2f4fa","name":"Load dB?","property":"load_database","propertyType":"msg","rules":[{"t":"eq","v":"load","vt":"str"},{"t":"eq","v":"load_and_welcome","vt":"str"},{"t":"eq","v":"bad_applicationId","vt":"str"},{"t":"else"}],"checkall":"true","outputs":4,"x":98.75000762939453,"y":475,"wires":[["c2c7347a.c93b28","c6e4334d.11276"],["c2c7347a.c93b28","ae370963.a63028"],["b6801b97.4f8678"],["c6e4334d.11276"]]},{"id":"927fe4a1.7b35a8","type":"function","z":"32de6612.f2f4fa","name":"Thinking...","func":"var low = 1;\n    var high = 6;\n    var choice = Math.floor(Math.random() * (high - low + 1) + low);\n    switch (choice) {\n        case 1:\n            text = \"Ready when you are. \";\n            break; \n        case 2:\n            text = \"I can wait as long as you need. \";\n            break; \n        case 3:\n            text = \"No rush. \";\n            break; \n        default: \n            text = \"Take your time. \"; // add other cases if needed\n        }\n    msg.payload = text;\n    msg.reprompt_text = msg.payload;\n\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":623.3610916137695,"y":750.4166374206543,"wires":[["2a82d6ba.b07e2a"]]},{"id":"66a4b65d.d46f18","type":"template","z":"32de6612.f2f4fa","name":"No card text","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{\n    \"version\": \"1.0\",\n    \"response\": {\n        \"outputSpeech\": {\n            \"type\": \"SSML\",\n            \"ssml\": \"<speak>{{payload}}</speak>\"\n        },\n        \"reprompt\": {\n          \"outputSpeech\": {\n            \"type\": \"SSML\",\n            \"text\": \"string\",\n            \"ssml\": \"<speak>{{reprompt_text}}</speak>\"\n          }\n         },\n        \"shouldEndSession\": {{shouldendsession}}\n    }\n}","x":1113.166648864746,"y":713.194483757019,"wires":[["d4309587.b3d0b8"]]},{"id":"2a82d6ba.b07e2a","type":"switch","z":"32de6612.f2f4fa","name":"No card?","property":"card_text","propertyType":"msg","rules":[{"t":"neq","v":"\"\"","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":930.3611068725586,"y":673.5833988189697,"wires":[["a3a18a40.b93b78"],["66a4b65d.d46f18"]]},{"id":"8f6758b5.897048","type":"function","z":"32de6612.f2f4fa","name":"draw yarrows","func":"//  Javascript I Ching Hexagram Generator v.1.2\n// Copyright (C) October, 1999  dan enright/2thirdx-perts\n\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or the most current version.\n// The most current version can be found at http://www.gnu.org/copyleft/gpl.html\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy (or a link to a copy) of the GNU General Public License\n// along with this program; if not, write to the Free Software Foundation, Inc.\n// 59 Temple Place - Suite 330 \n// Boston, MA  02111-1307, USA. \n//\n// You can contact the author via email at: \n// dan@scranton.com or dan@DanEnright.com\n// and via USnail at:\n// 635 wheeler ave\n// scranton, pa, 18510\n// Removed all image references - Ted Barnett 05-31-2016\n\n var lineValue = new Array(15);\n   lineValue[0] = \"7\";\n   lineValue[1] = \"8\";\n   lineValue[2] = \"7\";\n   lineValue[3] = \"6\";\n   lineValue[4] = \"7\";\n   lineValue[5] = \"8\";\n   lineValue[6] = \"9\";\n   lineValue[7] = \"8\";\n   lineValue[8] = \"7\";\n   lineValue[9] = \"6\";\n   lineValue[10] = \"7\";\n   lineValue[11] = \"8\";\n   lineValue[12] = \"7\";\n   lineValue[13] = \"6\";\n   lineValue[14] = \"7\";\n   lineValue[15] = \"8\";\n\nvar hexValue = new Array(15);\n   hexValue[0] = \"0\";\n   hexValue[1] = \"1\";\n   hexValue[2] = \"0\";\n   hexValue[3] = \"1\";\n   hexValue[4] = \"0\";\n   hexValue[5] = \"1\";\n   hexValue[6] = \"0\";\n   hexValue[7] = \"1\";\n   hexValue[8] = \"0\";\n   hexValue[9] = \"1\";\n   hexValue[10] = \"0\";\n   hexValue[11] = \"1\";\n   hexValue[12] = \"0\";\n   hexValue[13] = \"1\";\n   hexValue[14] = \"0\";\n   hexValue[15] = \"1\";\n   \n//var hexagram_count_1 = new Array(65);\n//var hexagram_count_2 = new Array(65);\n\n//for ( j = 0; j < 65; j++){\n//    hexagram_count_1[j] = 0;\n//    hexagram_count_2[j] = 0;\n//}\n\n//var binarystring_hexagram_1 =\"\";\n//var binarystring_hexagram_2 =\"\";\n\n// for ( counter = 0; counter < 1; counter++){ // does x draws.  Can up this to increase samples for testing.\n\n    \tfor ( i = 0; i < 7; i++ ); {\t\n\n\t        if (i == 1); {\n\t\tvar r1 = Math.round(Math.random() * 15);\n\t\t\tvar hex1 = hexValue[r1];\n\t\t\t\n            \tif ((lineValue[r1] == 6) || (lineValue[r1] == 7)) { \n\t\t\t\t\tvar hex7 = hexValue[0];\n\t\t\t\t} \n\t\t\t\telse if ((lineValue[r1] == 8) || (lineValue[r1] == 9)) {  \n\t\t\t\t\tvar hex7 = hexValue[1];\n\t\t\t\t} \n          }    \n\n\t        if (i == 2); {\n\t\tvar r2 = Math.round(Math.random() * 15);\n\t\t\tvar hex2 = hexValue[r2];\n\t\t\t\n            \tif ((lineValue[r2] == 6) || (lineValue[r2] == 7)) { \n\t\t\t\t\tvar hex8 = hexValue[0];\n\t\t\t\t} \n\t\t\t\telse if ((lineValue[r2] == 8) || (lineValue[r2] == 9)) {  \n\t\t\t\t\tvar hex8 = hexValue[1];\n\t\t\t\t} \n          }    \n\n\t        if (i == 3); {\n\t\tvar r3 = Math.round(Math.random() * 15);\n\t\t\tvar hex3 = hexValue[r3];\n\t\t\t\n            \tif ((lineValue[r3] == 6) || (lineValue[r3] == 7)) { \n\t\t\t\t\tvar hex9 = hexValue[0];\n\t\t\t\t} \n\t\t\t\telse if ((lineValue[r3] == 8) || (lineValue[r3] == 9)) {  \n\t\t\t\t\tvar hex9 = hexValue[1];\n\t\t\t\t} \n          }    \n\n\t        if (i == 4); {\n\t\tvar r4 = Math.round(Math.random() * 15);\n\t\t\tvar hex4 = hexValue[r4];\n\t\t\t\n            \tif ((lineValue[r4] == 6) || (lineValue[r4] == 7)) { \n\t\t\t\t\tvar hex10 = hexValue[0];\n\t\t\t\t} \n\t\t\t\telse if ((lineValue[r4] == 8) || (lineValue[r4] == 9)) {  \n\t\t\t\t\tvar hex10 = hexValue[1];\n\t\t\t\t} \n          }    \n\n\t        if (i == 5); {\n\t\tvar r5 = Math.round(Math.random() * 15);\n\t\t\tvar hex5 = hexValue[r5];\n\t\t\t\n            \tif ((lineValue[r5] == 6) || (lineValue[r5] == 7)) { \n\t\t\t\t\tvar hex11 = hexValue[0];\n\t\t\t\t} \n\t\t\t\telse if ((lineValue[r5] == 8) || (lineValue[r5] == 9)) {  \n\t\t\t\t\tvar hex11 = hexValue[1];\n\t\t\t\t} \n          }    \n\n\t        if (i == 6); {\n\t\tvar r6 = Math.round(Math.random() * 15);\n\t\t\tvar hex6 = hexValue[r6];\n\t\t\t\n            \tif ((lineValue[r6] == 6) || (lineValue[r6] == 7)) { \n\t\t\t\t\tvar hex12 = hexValue[0];\n\t\t\t\t} \n\t\t\t\telse if ((lineValue[r6] == 8) || (lineValue[r6] == 9)) {  \n\t\t\t\t\tvar hex12 = hexValue[1];\n\t\t\t\t} \n          }    \n\t }\n\n        binarystring_hexagram_1 = (hex6 + hex5 + hex4 + hex3 + hex2 + hex1);\n        binarystring_hexagram_2 = (hex12 + hex11 + hex10 + hex9 + hex8 + hex7);\n        \n        msg.hexagram_1 = parseInt(binarystring_hexagram_1, 2);\n        msg.hexagram_2 = parseInt(binarystring_hexagram_2, 2);\n        \n//        hexagram_1 = msg.hexagram_1;\n//        hexagram_2 = msg.hexagram_2;\n//        hexagram_count_1[hexagram_1] = hexagram_count_1[hexagram_1] + 1;\n//        hexagram_count_2[hexagram_2] = hexagram_count_2[hexagram_2] + 1;\n//    }\n    \n//var msg2 = { payload: hexagram_count_1 };\n//var msg3 = { payload: hexagram_count_2 };\n//return [msg,msg2,msg3];\n\nreturn msg;","outputs":"1","noerr":0,"x":650.3150100708008,"y":330.2017822265625,"wires":[["1940a715.a3de39","6df54cb2.25d024","a4211d29.228a5"]]},{"id":"5142485c.33a9f8","type":"debug","z":"32de6612.f2f4fa","name":"Hexagram Reading","active":true,"console":"false","complete":"card_text","x":1008.5277671813965,"y":433.4444408416748,"wires":[]},{"id":"b076b95a.58dd58","type":"function","z":"32de6612.f2f4fa","name":"Explain","func":"    var low = 1;\n    var high = 6;\n    var choice = Math.floor(Math.random() * (high - low + 1) + low);\n    switch (choice) {\n        case 1:\n            text = \"I can explain. \";\n            break; \n        case 2:\n            text = \"Sure. \";\n            break; \n        case 3:\n            text = \"Okay, I will explain. \";\n            break; \n        default: \n            text = \"Let me explain. \"; // add other cases if needed\n        }\n    msg.payload = \"The interpretation of the readings found in the I Ching is a matter of centuries of debate, and many commentators have used the book symbolically, often to provide guidance for moral decision making as informed by Dowism and Confucianism.\";\n    msg.card_text = \"The interpretation of the readings found in the I Ching is a matter of centuries of debate, and many commentators have used the book symbolically, often to provide guidance for moral decision making as informed by Taoism and Confucianism.\";\n    msg.card_text = msg.card_text + \"\\\\nThink of a question that faces you and see how the hexagram readings might relate to that question.\"; \n    msg.payload =  msg.payload + \"  Think of a question that faces you and see how the hexagram readings might relate to that question.\";\n    msg.reprompt_text = \"Shall we move on to the next reading?\";\n    msg.payload = text + msg.payload + \" \" + msg.reprompt_text;\n\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\n\nreturn msg;","outputs":1,"noerr":0,"x":613.2221755981445,"y":789.6944093704224,"wires":[["2a82d6ba.b07e2a"]]},{"id":"4c4249f5.f7e758","type":"function","z":"32de6612.f2f4fa","name":"Feedback","func":"\n    var low = 1;\n    var high = 6;\n    var choice = Math.floor(Math.random() * (high - low + 1) + low);\n    switch (choice) {\n        case 1:\n            text = \"Thanks for being willing to provide feedback. \";\n            break; \n        case 2:\n            text = \"Always glad to hear your feedback. \";\n            break; \n        case 3:\n            text = \"Thanks for offering feedback. \";\n            break; \n        default: \n            text = \"Excellent.  Feedback is always helpful. \"; // add other cases if needed\n        }\n    msg.payload = \"On a scale of 1 to 10, where 1 is not satisfied and 10 is very satisfied, how happy are you with this skill?\"\n    msg.reprompt_text = msg.payload;\n    msg.payload = text + msg.payload;\n\n\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":614.1665725708008,"y":830.9721803665161,"wires":[["2a82d6ba.b07e2a"]]},{"id":"d6cd8282.66884","type":"function","z":"32de6612.f2f4fa","name":"Score","func":"var scorenumber = msg.payload.request.intent.slots.scorenumber.value; // {{payload.request.intent.slots.username.value}};\ntext = \"\";\n\n    if(scorenumber >= 7){\n        text = \"I am glad you like it. \";\n    }else{\n        if(scorenumber <= 4) text = \"We will try to do a better job. \"; \n    }\n    msg.payload = \"That is helpful feedback. I will pass it along to our development team.  Shall we continue?\"\n    msg.reprompt_text = \"Shall we continue?\";\n    msg.payload = text + msg.payload;\n\nmsg.feedback_score = scorenumber;\ncontext.global.shouldendsession = false;\nmsg.shouldendsession = context.global.shouldendsession;\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":603.8611526489258,"y":871.9443492889404,"wires":[["2a82d6ba.b07e2a","cdb73f1d.23fb1"]]},{"id":"d95f7757.879ff8","type":"debug","z":"32de6612.f2f4fa","name":"# hexagrams loaded","active":true,"console":"false","complete":"payload","x":1022.7500076293945,"y":110,"wires":[]},{"id":"6df54cb2.25d024","type":"debug","z":"32de6612.f2f4fa","name":"hexagram_1","active":false,"console":"false","complete":"hexagram_1","x":935.7500076293945,"y":237,"wires":[]},{"id":"a4211d29.228a5","type":"debug","z":"32de6612.f2f4fa","name":"hexagram_2","active":false,"console":"false","complete":"hexagram_2","x":938.7500076293945,"y":295,"wires":[]},{"id":"4610167.5314fe8","type":"debug","z":"32de6612.f2f4fa","name":"user_id","active":true,"console":"false","complete":"user_id","x":390.75000762939453,"y":147,"wires":[]},{"id":"cdb73f1d.23fb1","type":"function","z":"32de6612.f2f4fa","name":"user info","func":"msg.payload = {\n    user_id: msg.user_id,\n    feedback_score: msg.feedback_score,\n    date_entered: Date.now()\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":852.2500152587891,"y":870.2500133514404,"wires":[["30731d2b.f55522"]]},{"id":"30731d2b.f55522","type":"cloudant out","z":"32de6612.f2f4fa","name":"feedback","cloudant":"17e86ab0.bee305","database":"feedback","service":"_ext_","payonly":true,"operation":"insert","x":1065.2498931884766,"y":870.7221813201904,"wires":[]},{"id":"b7dfeea2.bc7f5","type":"function","z":"32de6612.f2f4fa","name":"user info","func":"msg.payload = {\n    user_id: msg.user_id,\n    date_visited: Date.now()\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":964.7500076293945,"y":167,"wires":[["63ef31c5.6d89f","9c970999.5fa898"]]},{"id":"63ef31c5.6d89f","type":"cloudant out","z":"32de6612.f2f4fa","name":"user visit","cloudant":"17e86ab0.bee305","database":"users","service":"_ext_","payonly":true,"operation":"insert","x":1141.249885559082,"y":167.47216796875,"wires":[]},{"id":"9c970999.5fa898","type":"debug","z":"32de6612.f2f4fa","name":"user visit","active":true,"console":"false","complete":"payload","x":1134.7500076293945,"y":225,"wires":[]},{"id":"be82b304.cde9e","type":"function","z":"32de6612.f2f4fa","name":"Error","func":"//msg.payload = \"Apologies, but I encountered an error.  Goodbye. \";\nmsg.payload = JSON.stringify(\"Apologies, but I encountered an error.  Goodbye. \");\nmsg.reprompt_text = \"Goodbye\";\n\nmsg.shouldendsession = true;\nmsg.card_text = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":602.7500076293945,"y":923.7500143051147,"wires":[["2a82d6ba.b07e2a"]]},{"id":"a731f671.cde968","type":"debug","z":"32de6612.f2f4fa","name":"","active":true,"console":"false","complete":"false","x":237.25000762939453,"y":20,"wires":[]},{"id":"db6486e0.b35c58","type":"debug","z":"32de6612.f2f4fa","name":"","active":false,"console":"false","complete":"false","x":744.2500076293945,"y":126,"wires":[]},{"id":"c3998321.4207f","type":"debug","z":"32de6612.f2f4fa","name":"SessionEndedRequest","active":true,"console":"false","complete":"payload","x":325.25000762939453,"y":838,"wires":[]},{"id":"613d3969.a36998","type":"catch","z":"32de6612.f2f4fa","name":"Catch Verifier errors","scope":["fe676145.4fded"],"x":313.75000762939453,"y":918.2500143051147,"wires":[["be82b304.cde9e","4e6d334b.2a7f8c"]]},{"id":"4e6d334b.2a7f8c","type":"debug","z":"32de6612.f2f4fa","name":"","active":true,"console":"false","complete":"false","x":621.5000076293945,"y":967.5000152587891,"wires":[]},{"id":"50652caa.d95944","type":"debug","z":"32de6612.f2f4fa","name":"","active":true,"console":"false","complete":"load_database","x":400.75000762939453,"y":231,"wires":[]},{"id":"fe676145.4fded","type":"alexa-verifier","z":"32de6612.f2f4fa","name":"","x":124.75000762939453,"y":161,"wires":[["1f89a078.d1c7d"]]},{"id":"17e86ab0.bee305","type":"cloudant","z":"32de6612.f2f4fa","host":"70634ae4-4b81-474a-85f9-b4e5ea27ded8-bluemix.cloudant.com","name":"iChing dB"}]
